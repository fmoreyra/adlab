# Generated by Django 5.2.7 on 2025-10-11 18:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        (
            "accounts",
            "0003_veterinarian_address_veterinarianchangelog_and_more",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="WorkOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="order number"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="created at"
                    ),
                ),
            ],
            options={
                "verbose_name": "work order",
                "verbose_name_plural": "work orders",
            },
        ),
        migrations.CreateModel(
            name="Protocol",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "temporary_code",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Pre-reception tracking code (e.g., TMP-CT-20241010-456)",
                        max_length=50,
                        null=True,
                        unique=True,
                        verbose_name="temporary code",
                    ),
                ),
                (
                    "protocol_number",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Final protocol number (e.g., HP 24/001 or CT 24/001)",
                        max_length=50,
                        null=True,
                        unique=True,
                        verbose_name="protocol number",
                    ),
                ),
                (
                    "analysis_type",
                    models.CharField(
                        choices=[
                            ("cytology", "Cytology"),
                            ("histopathology", "Histopathology"),
                        ],
                        max_length=20,
                        verbose_name="analysis type",
                    ),
                ),
                (
                    "species",
                    models.CharField(max_length=100, verbose_name="species"),
                ),
                (
                    "breed",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="breed"
                    ),
                ),
                (
                    "sex",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("unknown", "Unknown"),
                        ],
                        max_length=20,
                        verbose_name="sex",
                    ),
                ),
                (
                    "age",
                    models.CharField(
                        blank=True,
                        help_text='Example: "2 years", "6 months"',
                        max_length=50,
                        verbose_name="age",
                    ),
                ),
                (
                    "animal_identification",
                    models.CharField(
                        help_text="Name, tag number, or other identifier",
                        max_length=200,
                        verbose_name="animal identification",
                    ),
                ),
                (
                    "owner_last_name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="owner last name",
                    ),
                ),
                (
                    "owner_first_name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="owner first name",
                    ),
                ),
                (
                    "presumptive_diagnosis",
                    models.TextField(verbose_name="presumptive diagnosis"),
                ),
                (
                    "clinical_history",
                    models.TextField(
                        blank=True, verbose_name="clinical history"
                    ),
                ),
                (
                    "academic_interest",
                    models.BooleanField(
                        default=False,
                        help_text="Allow use for academic/research purposes",
                        verbose_name="academic interest",
                    ),
                ),
                (
                    "submission_date",
                    models.DateField(verbose_name="submission date"),
                ),
                (
                    "reception_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="reception date"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("submitted", "Submitted"),
                            ("received", "Received"),
                            ("processing", "Processing"),
                            ("ready", "Ready"),
                            ("report_sent", "Report Sent"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="updated at"
                    ),
                ),
                (
                    "veterinarian",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="protocols",
                        to="accounts.veterinarian",
                        verbose_name="veterinarian",
                    ),
                ),
                (
                    "work_order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="protocols",
                        to="protocols.workorder",
                        verbose_name="work order",
                    ),
                ),
            ],
            options={
                "verbose_name": "protocol",
                "verbose_name_plural": "protocols",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="HistopathologySample",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "material_submitted",
                    models.TextField(
                        help_text="Description of tissue/organ samples",
                        verbose_name="material submitted",
                    ),
                ),
                (
                    "number_of_containers",
                    models.IntegerField(
                        default=1,
                        help_text="Number of containers/jars sent",
                        verbose_name="number of containers",
                    ),
                ),
                (
                    "preservation",
                    models.CharField(
                        default="Formol 10%",
                        help_text="Preservation method used",
                        max_length=100,
                        verbose_name="preservation",
                    ),
                ),
                (
                    "observations",
                    models.TextField(blank=True, verbose_name="observations"),
                ),
                (
                    "reception_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="reception date"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="updated at"
                    ),
                ),
                (
                    "veterinarian",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="histopathology_samples",
                        to="accounts.veterinarian",
                        verbose_name="veterinarian",
                    ),
                ),
                (
                    "protocol",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="histopathology_sample",
                        to="protocols.protocol",
                        verbose_name="protocol",
                    ),
                ),
            ],
            options={
                "verbose_name": "histopathology sample",
                "verbose_name_plural": "histopathology samples",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CytologySample",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "technique_used",
                    models.CharField(
                        help_text="E.g., Fine needle aspiration (FNA), swab, scraping, etc.",
                        max_length=200,
                        verbose_name="technique used",
                    ),
                ),
                (
                    "sampling_site",
                    models.CharField(
                        help_text="Anatomical location of sample",
                        max_length=200,
                        verbose_name="sampling site",
                    ),
                ),
                (
                    "number_of_slides",
                    models.IntegerField(
                        default=1,
                        help_text="Number of glass slides sent",
                        verbose_name="number of slides",
                    ),
                ),
                (
                    "observations",
                    models.TextField(blank=True, verbose_name="observations"),
                ),
                (
                    "reception_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="reception date"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="updated at"
                    ),
                ),
                (
                    "veterinarian",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cytology_samples",
                        to="accounts.veterinarian",
                        verbose_name="veterinarian",
                    ),
                ),
                (
                    "protocol",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cytology_sample",
                        to="protocols.protocol",
                        verbose_name="protocol",
                    ),
                ),
            ],
            options={
                "verbose_name": "cytology sample",
                "verbose_name_plural": "cytology samples",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProtocolStatusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("submitted", "Submitted"),
                            ("received", "Received"),
                            ("processing", "Processing"),
                            ("ready", "Ready"),
                            ("report_sent", "Report Sent"),
                        ],
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "changed_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="changed at"
                    ),
                ),
                (
                    "changed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="protocol_status_changes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="changed by",
                    ),
                ),
                (
                    "protocol",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_history",
                        to="protocols.protocol",
                        verbose_name="protocol",
                    ),
                ),
            ],
            options={
                "verbose_name": "protocol status history",
                "verbose_name_plural": "protocol status histories",
                "ordering": ["-changed_at"],
                "indexes": [
                    models.Index(
                        fields=["protocol", "-changed_at"],
                        name="protocols_p_protoco_6fa8e6_idx",
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="protocol",
            index=models.Index(
                fields=["temporary_code"],
                name="protocols_p_tempora_ecd78e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="protocol",
            index=models.Index(
                fields=["protocol_number"],
                name="protocols_p_protoco_e9468d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="protocol",
            index=models.Index(
                fields=["veterinarian", "-submission_date"],
                name="protocols_p_veterin_b20e94_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="protocol",
            index=models.Index(
                fields=["status", "-submission_date"],
                name="protocols_p_status_61bd54_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="protocol",
            index=models.Index(
                fields=["analysis_type", "-submission_date"],
                name="protocols_p_analysi_a560e5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="protocol",
            index=models.Index(
                fields=["-created_at"], name="protocols_p_created_109e78_idx"
            ),
        ),
    ]
