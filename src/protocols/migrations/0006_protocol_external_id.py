# Generated by Django 5.2.7 on 2025-10-12 04:16

import uuid

from django.db import migrations, models


def generate_external_ids(apps, schema_editor):
    """Generate unique UUIDs for existing protocols."""
    Protocol = apps.get_model("protocols", "Protocol")
    for protocol in Protocol.objects.all():
        protocol.external_id = uuid.uuid4()
        protocol.save(update_fields=["external_id"])


def reverse_generate_external_ids(apps, schema_editor):
    """Reverse operation - no need to do anything."""
    pass


class Migration(migrations.Migration):
    dependencies = [
        (
            "protocols",
            "0005_cassette_slide_processinglog_cassetteslide_and_more",
        ),
    ]

    operations = [
        # Step 1: Add field without unique constraint
        migrations.AddField(
            model_name="protocol",
            name="external_id",
            field=models.UUIDField(
                db_index=True,
                default=uuid.uuid4,
                help_text="UUID único para acceso público al protocolo",
                verbose_name="ID externo",
                null=True,  # Allow null initially
                blank=True,
            ),
        ),
        # Step 2: Generate unique UUIDs for existing records
        migrations.RunPython(
            generate_external_ids,
            reverse_generate_external_ids,
        ),
        # Step 3: Make field non-nullable and unique
        migrations.AlterField(
            model_name="protocol",
            name="external_id",
            field=models.UUIDField(
                db_index=True,
                default=uuid.uuid4,
                help_text="UUID único para acceso público al protocolo",
                unique=True,
                verbose_name="ID externo",
            ),
        ),
    ]
