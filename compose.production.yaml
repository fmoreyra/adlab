# Production-specific Docker Compose configuration
# Usage: docker compose -f compose.yaml -f compose.production.yaml up -d

services:
  # Override web service to not expose ports directly
  web:
    ports: []  # Remove direct port exposure
    expose:
      - "8000"  # Only expose to Docker network

  # Add Nginx reverse proxy
  nginx:
    image: nginx:1.25-alpine
    container_name: laboratory-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      - nginx-logs:/var/log/nginx
      - nginx-cache:/var/cache/nginx
    depends_on:
      - web
    profiles: ["nginx"]
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_NGINX_CPUS:-0.5}"
          memory: "${DOCKER_NGINX_MEMORY:-256M}"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/up"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Certbot for SSL certificate management
  certbot:
    image: certbot/certbot:latest
    container_name: laboratory-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    profiles: ["certbot"]
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  nginx-logs: {}
  nginx-cache: {}
